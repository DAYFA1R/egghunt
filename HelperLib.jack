class HelperLib {
    // (assuming that for this project we draw 16x16)
    // takes in a co-ord for X of 0-31 (512 / 16)
    // takes in a co-ord for Y of 0-15 (256 / 16)
    // returns back the top left pixel of the supplied co-ord for drawing
    function int locationCalc(int atX, int atY) {
        return (32 * (atY * 16)) + ((atX * 16) / 16);
    }

    function void clear(int atX, int atY) {
        var int memAddress;
        let memAddress = 16384 + HelperLib.locationCalc(atX, atY);
        do Memory.poke(memAddress+0, 0);
        do Memory.poke(memAddress+32, 0);
        do Memory.poke(memAddress+64, 0);
        do Memory.poke(memAddress+96, 0);
        do Memory.poke(memAddress+128, 0);
        do Memory.poke(memAddress+160, 0);
        do Memory.poke(memAddress+192, 0);
        do Memory.poke(memAddress+224, 0);
        do Memory.poke(memAddress+256, 0);
        do Memory.poke(memAddress+288, 0);
        do Memory.poke(memAddress+320, 0);
        do Memory.poke(memAddress+352, 0);
        do Memory.poke(memAddress+384, 0);
        do Memory.poke(memAddress+416, 0);
        do Memory.poke(memAddress+448, 0);
        do Memory.poke(memAddress+480, 0);
        return;
    }

    function boolean toggleBool(boolean sourceCondition) {
        if (sourceCondition) {
            return false;
        }
        return true;
    }

    function void createFloor(int atX, int atY, int length) {
        var int counter;
        let counter = 0;
        while (counter < length) {
            do SpriteBrick.draw(atX + counter, atY);
            let counter = counter + 1;
        }
        return;
    }

    function void createLadder(int atX, int atY, int height) {
        var int counter;
        let counter = 0;
        while (counter < height) {
            do SpriteLadder.draw(atX, atY - counter);
            let counter = counter + 1;
        }
        return;
    }

    function void createButton(boolean direction, boolean toggle, int atX, int atY) {
        if (~toggle) {
            if (direction) {
                do SpriteButtonL.draw(atX, atY);
            } else {
                do SpriteButtonR.draw(atX, atY);
            }
        } else {
            if (direction) {
                do SpriteButtonLActive.draw(atX, atY);
            } else {
                do SpriteButtonRActive.draw(atX, atY);
            }
        }
        return;
    }

    function void createGate(boolean toggle, int atX, int atY, boolean frameState) {
        if (~toggle) {
            if (frameState) {
                do SpriteZap.draw(atX, atY);
            } else {
                do SpriteZapAlt.draw(atX, atY);
            }
        } else {
            do HelperLib.clear(atX, atY);
        }
        return;
    }
}
