class Game {
    field int action, counter;
    field World world;

    constructor Game new() {
        let action = 0;
        let counter = 0;
        let world = World.new(0);
        return this;
    }

    method void run() {
        var char key;
        var boolean exit;

        while (world.hasNextLevel()) {
            let exit = false;
            do world.renderFrame();

            while(~exit) {
                // UI
                do renderUI();

                // Keypress listener
                while(key=0) {
                    let key = Keyboard.keyPressed();
                }
                // Up Arrow
                if (key = 131) {
                    let action = 1;
                }
                // Down arrow
                if (key = 133) {
                    let action = 2;
                }
                // Left Arrow
                if (key = 130) {
                    let action = 3;
                }
                // Right Arrow
                if (key = 132) {
                    let action = 4;
                }
                // Space
                if (key = 32) {
                    let action = 5;
                }

                // handle the action resulting from the keypress
                // or check win condition
                if (handleAction()) {
                    let exit = true;
                }

                do world.renderFrame();
                let key = 0;
                do Sys.wait(100);
            }

            do Screen.clearScreen();
            do world.setNextLevel();
        }

        do complete();

        while(true) {
            // loop infinite
        }

        return;
    }

    method boolean handleAction() {
        var Player player;
        let player = world.getActivePlayer();

        // move up
        if (action = 1) {
            // only if in contact w/ ladder
            if (world.checkHitTests(1)) {
                do player.moveUp();
                // do world.renderFrame();
                let counter = counter + 1;
            }
        }

        // move up
        if (action = 2) {
            // only if in contact w/ ladder
            if (world.checkHitTests(2)) {
                do player.moveDown();
                // do world.renderFrame();
                let counter = counter + 1;
            }
        }

        // move left
        if (action = 3) {
            // only if on a floor
            if (world.checkHitTests(3)) {
                do player.moveLeft();
                // do world.renderFrame();
                let counter = counter + 1;
            }
        }

        // move right
        if (action = 4) {
            // only if on a floor
            if (world.checkHitTests(4)) {
                do player.moveRight();
                // do world.renderFrame();
                let counter = counter + 1;
            }
        }

        if (action = 5) {
            do world.checkHitTests(5);
        }

        // consistently check for goal
        if (~(action = 0)) {
            if (world.checkHitTests(0)) {
                return true;
            }
        }
        // do world.renderFrame();
        let action = 0;

        return false;
    }

    method void renderUI() {
        do Output.moveCursor(0, 0);
        do Output.printString("MOVES MADE:");
        do Output.printInt(counter);
        do Output.moveCursor(0, 26);
        do Output.printString("EGGHUNT");
        do Output.moveCursor(0, 50);
        do Output.printString("LEVEL:");
        do Output.printInt(world.getLevel() + 1);
        do Output.moveCursor(1, 0);
        return;
    }

    method void complete() {
        do Output.moveCursor(8, 17);
        do Output.printString("Thank you for playing EGGHUNT");
        do Output.moveCursor(10, 17);
        do Output.printString("You completed it in ");
        do Output.printInt(counter);
        do Output.printString(" moves!");
        do Output.moveCursor(12, 14);
        do Output.printString("Can you get it done in fewer moves?");
        do Output.moveCursor(18, 18);
        do Output.printString("github.com/DAYFA1R/egghunt");
        return;
    }
}